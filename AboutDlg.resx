<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
</root>